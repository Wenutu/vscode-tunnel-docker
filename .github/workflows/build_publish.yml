name: Build and publish image

on:
  push:
    branches:
      - main
    paths:
      - "Dockerfile"
      - "src/**"
  release:
    types: [published]
  schedule:
    - cron: "0 3 1 * 0"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - arch: amd64
          - arch: arm64
          - arch: arm/v7
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKENS }}

      - name: Get latest VS Code version
        id: vscode-version
        run: |
          # Fetch the latest tag from GitHub and format it for Docker tag
          LATEST_TAG=$(curl -s https://api.github.com/repos/microsoft/vscode/releases/latest | jq -r '.tag_name')
          echo "LATEST_TAG=LATESTTAG">>{LATEST_TAG}" >> GITHUB_ENV
          # echo "::set-output name=LATEST_TAG::${LATEST_TAG}"

      - name: Check if image exists
        id: check-image
        run: |
          # Using Docker CLI to check if the tag already exists in your Docker repository
          EXISTS=(dockerpullwenutu/vscode−tunnel−docker:(docker pull wenutu/vscode-tunnel-docker:LATEST_TAG > /dev/null 2>&1 && echo "yes" || echo "no")
          echo "IMAGE_EXISTS=EXISTS">>{EXISTS}" >> GITHUB_ENV
          # echo "::set-output name=exists::$EXISTS"

      - name: Build and push Docker image
        #if: steps.check-image.outputs.exists == 'no'
        if: env.IMAGE_EXISTS == 'no'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TARGETARCH=${{ matrix.platform.arch }}
          tags: wenutu/vscode-tunnel-docker:latest, wenutu/vscode-tunnel-docker:${{ env.LATEST_TAG }}
          platforms: linux/amd64, linux/arm64, linux/arm/v7
          push: true

      - name: Cleanup post build
        run: docker system prune -af
